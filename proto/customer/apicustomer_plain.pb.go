// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: apicustomer_plain.proto

package customer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//  the uuid of the database
type Uuid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Uuid) Reset() {
	*x = Uuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uuid) ProtoMessage() {}

func (x *Uuid) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uuid.ProtoReflect.Descriptor instead.
func (*Uuid) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{0}
}

func (x *Uuid) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

//  getByEmail request
type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{1}
}

func (x *Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

//  the customerid query object
type CustomerEntityId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// param name customerid
	Customerid string `protobuf:"bytes,1,opt,name=customerid,proto3" json:"customerid,omitempty"`
	// param name externalid
	Externalid string `protobuf:"bytes,2,opt,name=externalid,proto3" json:"externalid,omitempty"`
}

func (x *CustomerEntityId) Reset() {
	*x = CustomerEntityId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEntityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEntityId) ProtoMessage() {}

func (x *CustomerEntityId) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEntityId.ProtoReflect.Descriptor instead.
func (*CustomerEntityId) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{2}
}

func (x *CustomerEntityId) GetCustomerid() string {
	if x != nil {
		return x.Customerid
	}
	return ""
}

func (x *CustomerEntityId) GetExternalid() string {
	if x != nil {
		return x.Externalid
	}
	return ""
}

// response object in case of get requests
type CustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, Customer is returned
	//  Customer
	// in: body
	Customer *CustomerEntity `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *CustomerResponse) Reset() {
	*x = CustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerResponse) ProtoMessage() {}

func (x *CustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerResponse.ProtoReflect.Descriptor instead.
func (*CustomerResponse) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{3}
}

func (x *CustomerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CustomerResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CustomerResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *CustomerResponse) GetCustomer() *CustomerEntity {
	if x != nil {
		return x.Customer
	}
	return nil
}

// response object in case of get requests
type EmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, Customer is returned
	//  Customer
	// in: body
	Customers []*CustomerEntity `protobuf:"bytes,4,rep,name=customers,proto3" json:"customers,omitempty"`
}

func (x *EmailResponse) Reset() {
	*x = EmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailResponse) ProtoMessage() {}

func (x *EmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailResponse.ProtoReflect.Descriptor instead.
func (*EmailResponse) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{4}
}

func (x *EmailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EmailResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *EmailResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *EmailResponse) GetCustomers() []*CustomerEntity {
	if x != nil {
		return x.Customers
	}
	return nil
}

// Response object in case of put/post/delete
type CustomerSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// the uuid of the stored record
	Uuid string `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// For successful operations, uuid of customer is returned
	//  Customer
	// in: body
	Customer *CustomerEntity `protobuf:"bytes,5,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *CustomerSaveResponse) Reset() {
	*x = CustomerSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSaveResponse) ProtoMessage() {}

func (x *CustomerSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSaveResponse.ProtoReflect.Descriptor instead.
func (*CustomerSaveResponse) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerSaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CustomerSaveResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CustomerSaveResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *CustomerSaveResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CustomerSaveResponse) GetCustomer() *CustomerEntity {
	if x != nil {
		return x.Customer
	}
	return nil
}

// the customer object itself
type CustomerEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the db uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the title of the customer
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// the given firstname of the customer
	FirstName string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// the surname of the customer
	LastName string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// the email of the customer
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// the phonenumer
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	// the gender (Male=M, Female=F, C=Company)
	Gender string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	// date of birth in format YYYYMMDD
	BirthDate string `protobuf:"bytes,8,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	// company name
	Company string `protobuf:"bytes,9,opt,name=company,proto3" json:"company,omitempty"`
	// the id of the customer in the client system
	Externalcustomerid string `protobuf:"bytes,10,opt,name=externalcustomerid,proto3" json:"externalcustomerid,omitempty"`
	// the UID-number of the customer in the client system
	Uid string `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`
	// the list of addresses used by this customer
	Addresses []*CustomerAddress `protobuf:"bytes,12,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// the customerid of the customer in database
	Customerid int64 `protobuf:"varint,13,opt,name=customerid,proto3" json:"customerid,omitempty"`
}

func (x *CustomerEntity) Reset() {
	*x = CustomerEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEntity) ProtoMessage() {}

func (x *CustomerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEntity.ProtoReflect.Descriptor instead.
func (*CustomerEntity) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerEntity) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CustomerEntity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CustomerEntity) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CustomerEntity) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CustomerEntity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomerEntity) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CustomerEntity) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CustomerEntity) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CustomerEntity) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CustomerEntity) GetExternalcustomerid() string {
	if x != nil {
		return x.Externalcustomerid
	}
	return ""
}

func (x *CustomerEntity) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CustomerEntity) GetAddresses() []*CustomerAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *CustomerEntity) GetCustomerid() int64 {
	if x != nil {
		return x.Customerid
	}
	return 0
}

//  the addressobject represents one address
type CustomerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the db uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the given firstname of the customer
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// the surname of the customer
	LastName string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// the type of the address (B=Billing Address, S=Shipping Address)
	AddressType string `protobuf:"bytes,4,opt,name=addressType,proto3" json:"addressType,omitempty"`
	// the street of the address
	Street string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
	// the housenr of the address
	HouseNr string `protobuf:"bytes,6,opt,name=houseNr,proto3" json:"houseNr,omitempty"`
	// the city of the address
	City string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	// the zipcode of the address
	Zip string `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	// the country in ISO3 Format (DEU=Germany)
	Country string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	// for attention for customer
	ForAttention string `protobuf:"bytes,10,opt,name=for_attention,json=forAttention,proto3" json:"for_attention,omitempty"`
	// add on for city
	CityAddon string `protobuf:"bytes,11,opt,name=city_addon,json=cityAddon,proto3" json:"city_addon,omitempty"`
	// add on for street
	StreetAddon string `protobuf:"bytes,12,opt,name=street_addon,json=streetAddon,proto3" json:"street_addon,omitempty"`
	// company name
	Company string `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *CustomerAddress) Reset() {
	*x = CustomerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apicustomer_plain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAddress) ProtoMessage() {}

func (x *CustomerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_apicustomer_plain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAddress.ProtoReflect.Descriptor instead.
func (*CustomerAddress) Descriptor() ([]byte, []int) {
	return file_apicustomer_plain_proto_rawDescGZIP(), []int{7}
}

func (x *CustomerAddress) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CustomerAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CustomerAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CustomerAddress) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *CustomerAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *CustomerAddress) GetHouseNr() string {
	if x != nil {
		return x.HouseNr
	}
	return ""
}

func (x *CustomerAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CustomerAddress) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *CustomerAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CustomerAddress) GetForAttention() string {
	if x != nil {
		return x.ForAttention
	}
	return ""
}

func (x *CustomerAddress) GetCityAddon() string {
	if x != nil {
		return x.CityAddon
	}
	return ""
}

func (x *CustomerAddress) GetStreetAddon() string {
	if x != nil {
		return x.StreetAddon
	}
	return ""
}

func (x *CustomerAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

var File_apicustomer_plain_proto protoreflect.FileDescriptor

var file_apicustomer_plain_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x04, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x52, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x82, 0x03, 0x0a, 0x0e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x2e, 0x0a, 0x12,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x22, 0xf4,
	0x02, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4e, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x32, 0xd8, 0x02, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x0b, 0x67,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x05, 0x2e, 0x55, 0x75, 0x69,
	0x64, 0x1a, 0x11, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a,
	0x0e, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x0f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x70,
	0x75, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x4d, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x42, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x01, 0x5a, 0x10, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apicustomer_plain_proto_rawDescOnce sync.Once
	file_apicustomer_plain_proto_rawDescData = file_apicustomer_plain_proto_rawDesc
)

func file_apicustomer_plain_proto_rawDescGZIP() []byte {
	file_apicustomer_plain_proto_rawDescOnce.Do(func() {
		file_apicustomer_plain_proto_rawDescData = protoimpl.X.CompressGZIP(file_apicustomer_plain_proto_rawDescData)
	})
	return file_apicustomer_plain_proto_rawDescData
}

var file_apicustomer_plain_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_apicustomer_plain_proto_goTypes = []interface{}{
	(*Uuid)(nil),                 // 0: Uuid
	(*Email)(nil),                // 1: Email
	(*CustomerEntityId)(nil),     // 2: CustomerEntityId
	(*CustomerResponse)(nil),     // 3: CustomerResponse
	(*EmailResponse)(nil),        // 4: EmailResponse
	(*CustomerSaveResponse)(nil), // 5: CustomerSaveResponse
	(*CustomerEntity)(nil),       // 6: CustomerEntity
	(*CustomerAddress)(nil),      // 7: CustomerAddress
}
var file_apicustomer_plain_proto_depIdxs = []int32{
	6,  // 0: CustomerResponse.customer:type_name -> CustomerEntity
	6,  // 1: EmailResponse.customers:type_name -> CustomerEntity
	6,  // 2: CustomerSaveResponse.customer:type_name -> CustomerEntity
	7,  // 3: CustomerEntity.addresses:type_name -> CustomerAddress
	0,  // 4: CustomerConnector.getCustomer:input_type -> Uuid
	2,  // 5: CustomerConnector.getCustomerById:input_type -> CustomerEntityId
	1,  // 6: CustomerConnector.getCustomerByEmail:input_type -> Email
	6,  // 7: CustomerConnector.postCustomer:input_type -> CustomerEntity
	6,  // 8: CustomerConnector.putCustomer:input_type -> CustomerEntity
	6,  // 9: CustomerConnector.deleteCustomer:input_type -> CustomerEntity
	3,  // 10: CustomerConnector.getCustomer:output_type -> CustomerResponse
	3,  // 11: CustomerConnector.getCustomerById:output_type -> CustomerResponse
	4,  // 12: CustomerConnector.getCustomerByEmail:output_type -> EmailResponse
	5,  // 13: CustomerConnector.postCustomer:output_type -> CustomerSaveResponse
	5,  // 14: CustomerConnector.putCustomer:output_type -> CustomerSaveResponse
	5,  // 15: CustomerConnector.deleteCustomer:output_type -> CustomerSaveResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_apicustomer_plain_proto_init() }
func file_apicustomer_plain_proto_init() {
	if File_apicustomer_plain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apicustomer_plain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEntityId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apicustomer_plain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apicustomer_plain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apicustomer_plain_proto_goTypes,
		DependencyIndexes: file_apicustomer_plain_proto_depIdxs,
		MessageInfos:      file_apicustomer_plain_proto_msgTypes,
	}.Build()
	File_apicustomer_plain_proto = out.File
	file_apicustomer_plain_proto_rawDesc = nil
	file_apicustomer_plain_proto_goTypes = nil
	file_apicustomer_plain_proto_depIdxs = nil
}
