// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: ordersconnector_plain.proto

package orders

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//type of the file
type Document_DocType int32

const (
	Document_UNKNOWN         Document_DocType = 0
	Document_INVOICE         Document_DocType = 1
	Document_RETURNSLIP      Document_DocType = 2
	Document_DELIVERYNOTE    Document_DocType = 3
	Document_PICKINGSLIP     Document_DocType = 4
	Document_INVOICE_REPRINT Document_DocType = 5
	Document_OTHER           Document_DocType = 6
)

// Enum value maps for Document_DocType.
var (
	Document_DocType_name = map[int32]string{
		0: "UNKNOWN",
		1: "INVOICE",
		2: "RETURNSLIP",
		3: "DELIVERYNOTE",
		4: "PICKINGSLIP",
		5: "INVOICE_REPRINT",
		6: "OTHER",
	}
	Document_DocType_value = map[string]int32{
		"UNKNOWN":         0,
		"INVOICE":         1,
		"RETURNSLIP":      2,
		"DELIVERYNOTE":    3,
		"PICKINGSLIP":     4,
		"INVOICE_REPRINT": 5,
		"OTHER":           6,
	}
)

func (x Document_DocType) Enum() *Document_DocType {
	p := new(Document_DocType)
	*p = x
	return p
}

func (x Document_DocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Document_DocType) Descriptor() protoreflect.EnumDescriptor {
	return file_ordersconnector_plain_proto_enumTypes[0].Descriptor()
}

func (Document_DocType) Type() protoreflect.EnumType {
	return &file_ordersconnector_plain_proto_enumTypes[0]
}

func (x Document_DocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Document_DocType.Descriptor instead.
func (Document_DocType) EnumDescriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{23, 0}
}

type OrderpositionSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *OrderpositionSearchRequest) Reset() {
	*x = OrderpositionSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderpositionSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderpositionSearchRequest) ProtoMessage() {}

func (x *OrderpositionSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderpositionSearchRequest.ProtoReflect.Descriptor instead.
func (*OrderpositionSearchRequest) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{0}
}

func (x *OrderpositionSearchRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type OrderpositionReturnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positionreturns []*OrderpositionOneReturnResponse `protobuf:"bytes,1,rep,name=positionreturns,proto3" json:"positionreturns,omitempty"`
}

func (x *OrderpositionReturnsResponse) Reset() {
	*x = OrderpositionReturnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderpositionReturnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderpositionReturnsResponse) ProtoMessage() {}

func (x *OrderpositionReturnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderpositionReturnsResponse.ProtoReflect.Descriptor instead.
func (*OrderpositionReturnsResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{1}
}

func (x *OrderpositionReturnsResponse) GetPositionreturns() []*OrderpositionOneReturnResponse {
	if x != nil {
		return x.Positionreturns
	}
	return nil
}

type OrderpositionOneReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Creditdate     int64   `protobuf:"varint,2,opt,name=creditdate,proto3" json:"creditdate,omitempty"`
	Creditnumber   int64   `protobuf:"varint,3,opt,name=creditnumber,proto3" json:"creditnumber,omitempty"`
	Creditquantity float32 `protobuf:"fixed32,4,opt,name=creditquantity,proto3" json:"creditquantity,omitempty"`
	Creditamount   float32 `protobuf:"fixed32,5,opt,name=creditamount,proto3" json:"creditamount,omitempty"`
}

func (x *OrderpositionOneReturnResponse) Reset() {
	*x = OrderpositionOneReturnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderpositionOneReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderpositionOneReturnResponse) ProtoMessage() {}

func (x *OrderpositionOneReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderpositionOneReturnResponse.ProtoReflect.Descriptor instead.
func (*OrderpositionOneReturnResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{2}
}

func (x *OrderpositionOneReturnResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OrderpositionOneReturnResponse) GetCreditdate() int64 {
	if x != nil {
		return x.Creditdate
	}
	return 0
}

func (x *OrderpositionOneReturnResponse) GetCreditnumber() int64 {
	if x != nil {
		return x.Creditnumber
	}
	return 0
}

func (x *OrderpositionOneReturnResponse) GetCreditquantity() float32 {
	if x != nil {
		return x.Creditquantity
	}
	return 0
}

func (x *OrderpositionOneReturnResponse) GetCreditamount() float32 {
	if x != nil {
		return x.Creditamount
	}
	return 0
}

type StatusUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the uuid of the order
	Orderuuid string `protobuf:"bytes,1,opt,name=orderuuid,proto3" json:"orderuuid,omitempty"`
	// the new statuscode of the order
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// the username of the changing user
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *StatusUpdateRequest) Reset() {
	*x = StatusUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdateRequest) ProtoMessage() {}

func (x *StatusUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdateRequest.ProtoReflect.Descriptor instead.
func (*StatusUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{3}
}

func (x *StatusUpdateRequest) GetOrderuuid() string {
	if x != nil {
		return x.Orderuuid
	}
	return ""
}

func (x *StatusUpdateRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StatusUpdateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, Orders is returned
	Orders []*OrderResponse `protobuf:"bytes,4,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Response) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *Response) GetOrders() []*OrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, Order Uuid is returned
	OrderUuid string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
	// customer uuid
	CustomerUuid string `protobuf:"bytes,5,opt,name=customerUuid,proto3" json:"customerUuid,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{5}
}

func (x *CreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *CreateResponse) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

func (x *CreateResponse) GetCustomerUuid() string {
	if x != nil {
		return x.CustomerUuid
	}
	return ""
}

// swagger:parameters GetOrdersByInvoice
type InvoiceNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// param name invoicenr
	Invoicenr int32 `protobuf:"varint,1,opt,name=invoicenr,proto3" json:"invoicenr,omitempty"`
	// param name ordernr
	Ordernr int32 `protobuf:"varint,2,opt,name=ordernr,proto3" json:"ordernr,omitempty"`
	// param name channel
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *InvoiceNumber) Reset() {
	*x = InvoiceNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceNumber) ProtoMessage() {}

func (x *InvoiceNumber) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceNumber.ProtoReflect.Descriptor instead.
func (*InvoiceNumber) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{6}
}

func (x *InvoiceNumber) GetInvoicenr() int32 {
	if x != nil {
		return x.Invoicenr
	}
	return 0
}

func (x *InvoiceNumber) GetOrdernr() int32 {
	if x != nil {
		return x.Ordernr
	}
	return 0
}

func (x *InvoiceNumber) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// param name searchvalue
	Searchvalue string `protobuf:"bytes,1,opt,name=searchvalue,proto3" json:"searchvalue,omitempty"`
}

func (x *Search) Reset() {
	*x = Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Search) ProtoMessage() {}

func (x *Search) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Search.ProtoReflect.Descriptor instead.
func (*Search) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{7}
}

func (x *Search) GetSearchvalue() string {
	if x != nil {
		return x.Searchvalue
	}
	return ""
}

type OrderLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, Orders is returned
	Logresponseline []*Logresponse `protobuf:"bytes,4,rep,name=logresponseline,proto3" json:"logresponseline,omitempty"`
}

func (x *OrderLogResponse) Reset() {
	*x = OrderLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderLogResponse) ProtoMessage() {}

func (x *OrderLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderLogResponse.ProtoReflect.Descriptor instead.
func (*OrderLogResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{8}
}

func (x *OrderLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OrderLogResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OrderLogResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *OrderLogResponse) GetLogresponseline() []*Logresponse {
	if x != nil {
		return x.Logresponseline
	}
	return nil
}

type Logresponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Externalid string `protobuf:"bytes,1,opt,name=externalid,proto3" json:"externalid,omitempty"`
	Request    string `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Aldatum    int64  `protobuf:"varint,4,opt,name=aldatum,proto3" json:"aldatum,omitempty"`
	Alzeit     int64  `protobuf:"varint,5,opt,name=alzeit,proto3" json:"alzeit,omitempty"`
}

func (x *Logresponse) Reset() {
	*x = Logresponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logresponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logresponse) ProtoMessage() {}

func (x *Logresponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logresponse.ProtoReflect.Descriptor instead.
func (*Logresponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{9}
}

func (x *Logresponse) GetExternalid() string {
	if x != nil {
		return x.Externalid
	}
	return ""
}

func (x *Logresponse) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *Logresponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Logresponse) GetAldatum() int64 {
	if x != nil {
		return x.Aldatum
	}
	return 0
}

func (x *Logresponse) GetAlzeit() int64 {
	if x != nil {
		return x.Alzeit
	}
	return 0
}

// swagger:parameters GetOrdersByStatus
type StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//required:true
	// param name status
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// param name offset
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// param name channel
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *StatusCode) Reset() {
	*x = StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCode) ProtoMessage() {}

func (x *StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCode.ProtoReflect.Descriptor instead.
func (*StatusCode) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{10}
}

func (x *StatusCode) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StatusCode) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StatusCode) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// swagger:parameters GetOrderByUuid
type OrderId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required:true
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// not used
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// param name channel
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *OrderId) Reset() {
	*x = OrderId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderId) ProtoMessage() {}

func (x *OrderId) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderId.ProtoReflect.Descriptor instead.
func (*OrderId) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{11}
}

func (x *OrderId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OrderId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderId) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// swagger:parameters GetOrdersByCustomer
type CustomerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// param name customerid
	Customerid int32 `protobuf:"varint,1,opt,name=customerid,proto3" json:"customerid,omitempty"`
	// param name externalid
	Externalid string `protobuf:"bytes,2,opt,name=externalid,proto3" json:"externalid,omitempty"`
	// param name channel
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CustomerId) Reset() {
	*x = CustomerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerId) ProtoMessage() {}

func (x *CustomerId) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerId.ProtoReflect.Descriptor instead.
func (*CustomerId) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{12}
}

func (x *CustomerId) GetCustomerid() int32 {
	if x != nil {
		return x.Customerid
	}
	return 0
}

func (x *CustomerId) GetExternalid() string {
	if x != nil {
		return x.Externalid
	}
	return ""
}

func (x *CustomerId) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type Username struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *Username) Reset() {
	*x = Username{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Username) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Username) ProtoMessage() {}

func (x *Username) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Username.ProtoReflect.Descriptor instead.
func (*Username) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{13}
}

func (x *Username) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// OrderRequest
type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of order, order=Order, refund=Credit
	OrderType string `protobuf:"bytes,1,opt,name=orderType,proto3" json:"orderType,omitempty"`
	// the customer of this order
	Customer *Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	// the billingaddress used in this order
	BillingAddress *Address `protobuf:"bytes,3,opt,name=billingAddress,proto3" json:"billingAddress,omitempty"`
	// the shipping address
	ShippingAddress *Address `protobuf:"bytes,4,opt,name=shippingAddress,proto3" json:"shippingAddress,omitempty"`
	// the type of shipping like POST
	ShippingType string `protobuf:"bytes,5,opt,name=shippingType,proto3" json:"shippingType,omitempty"`
	// the type of payment
	PaymentType string `protobuf:"bytes,6,opt,name=paymentType,proto3" json:"paymentType,omitempty"`
	// the reference number of the psp
	PaymentReference string `protobuf:"bytes,7,opt,name=paymentReference,proto3" json:"paymentReference,omitempty"`
	// the ordernumber used in the system where order was created,if empty we create an own one
	Ordernr int64 `protobuf:"varint,8,opt,name=ordernr,proto3" json:"ordernr,omitempty"`
	// extra reference for ordernumber from the calling system
	ExternalOrderNr string `protobuf:"bytes,9,opt,name=externalOrderNr,proto3" json:"externalOrderNr,omitempty"`
	// the ordervalue multiplied by 10000
	OrderValueGross int64 `protobuf:"varint,10,opt,name=orderValueGross,proto3" json:"orderValueGross,omitempty"`
	// the orderdate in format YYYYMMDD
	OrderDate int64 `protobuf:"varint,11,opt,name=orderDate,proto3" json:"orderDate,omitempty"`
	// the ordertime in format HHMMSS
	OrderTime int64 `protobuf:"varint,12,opt,name=orderTime,proto3" json:"orderTime,omitempty"`
	// the currency, for example EUR
	Currency string `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	// the amount of the voucher used in this order (amount mulitplied with 10000)
	VoucherAmount int64 `protobuf:"varint,14,opt,name=voucherAmount,proto3" json:"voucherAmount,omitempty"`
	// the orderlines of this order
	Orderposition []*Ordersposition `protobuf:"bytes,15,rep,name=orderposition,proto3" json:"orderposition,omitempty"`
	// the shippingcosts used in this order (amount mulitplied with 10000)
	Shippingcosts int64 `protobuf:"varint,16,opt,name=shippingcosts,proto3" json:"shippingcosts,omitempty"`
	// the vouchercode of the used voucher
	Vouchercode string `protobuf:"bytes,17,opt,name=vouchercode,proto3" json:"vouchercode,omitempty"`
	// the minimum amount of the cart where we refund the voucher
	Mincartamount int64 `protobuf:"varint,18,opt,name=mincartamount,proto3" json:"mincartamount,omitempty"`
	// a reference to the affilaite network where the order is coming from
	Affiliatereference string `protobuf:"bytes,19,opt,name=affiliatereference,proto3" json:"affiliatereference,omitempty"`
	// param name channel
	Channel string `protobuf:"bytes,20,opt,name=channel,proto3" json:"channel,omitempty"`
	// designation of clientorderstatus
	Clientorderstatus string `protobuf:"bytes,21,opt,name=clientorderstatus,proto3" json:"clientorderstatus,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{14}
}

func (x *OrderRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderRequest) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderRequest) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *OrderRequest) GetShippingAddress() *Address {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *OrderRequest) GetShippingType() string {
	if x != nil {
		return x.ShippingType
	}
	return ""
}

func (x *OrderRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *OrderRequest) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *OrderRequest) GetOrdernr() int64 {
	if x != nil {
		return x.Ordernr
	}
	return 0
}

func (x *OrderRequest) GetExternalOrderNr() string {
	if x != nil {
		return x.ExternalOrderNr
	}
	return ""
}

func (x *OrderRequest) GetOrderValueGross() int64 {
	if x != nil {
		return x.OrderValueGross
	}
	return 0
}

func (x *OrderRequest) GetOrderDate() int64 {
	if x != nil {
		return x.OrderDate
	}
	return 0
}

func (x *OrderRequest) GetOrderTime() int64 {
	if x != nil {
		return x.OrderTime
	}
	return 0
}

func (x *OrderRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderRequest) GetVoucherAmount() int64 {
	if x != nil {
		return x.VoucherAmount
	}
	return 0
}

func (x *OrderRequest) GetOrderposition() []*Ordersposition {
	if x != nil {
		return x.Orderposition
	}
	return nil
}

func (x *OrderRequest) GetShippingcosts() int64 {
	if x != nil {
		return x.Shippingcosts
	}
	return 0
}

func (x *OrderRequest) GetVouchercode() string {
	if x != nil {
		return x.Vouchercode
	}
	return ""
}

func (x *OrderRequest) GetMincartamount() int64 {
	if x != nil {
		return x.Mincartamount
	}
	return 0
}

func (x *OrderRequest) GetAffiliatereference() string {
	if x != nil {
		return x.Affiliatereference
	}
	return ""
}

func (x *OrderRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *OrderRequest) GetClientorderstatus() string {
	if x != nil {
		return x.Clientorderstatus
	}
	return ""
}

type CustomerCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// For successful operations, uuid of customer is returned
	//  Customer
	// in: body
	Uuid string `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the customer object
	Customer *Customer `protobuf:"bytes,5,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *CustomerCreateResponse) Reset() {
	*x = CustomerCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerCreateResponse) ProtoMessage() {}

func (x *CustomerCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerCreateResponse.ProtoReflect.Descriptor instead.
func (*CustomerCreateResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{15}
}

func (x *CustomerCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CustomerCreateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CustomerCreateResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *CustomerCreateResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CustomerCreateResponse) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// OrderResponse
type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the uuid of the record
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 0=deleted, 1=aktiv
	Aktiv int64 `protobuf:"varint,2,opt,name=aktiv,proto3" json:"aktiv,omitempty"`
	// Type of order, AU=Order, GS=Credit, GW=Goodwill Credit
	OrderType string `protobuf:"bytes,3,opt,name=orderType,proto3" json:"orderType,omitempty"`
	// the customer of this order
	Customer *Customer `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`
	//the ordernumber in the system
	OrderNr int64 `protobuf:"varint,5,opt,name=orderNr,proto3" json:"orderNr,omitempty"`
	// the billingaddress used in this order
	BillingAddress *Address `protobuf:"bytes,6,opt,name=billingAddress,proto3" json:"billingAddress,omitempty"`
	// the shipping address
	ShippingAddress *Address `protobuf:"bytes,7,opt,name=shippingAddress,proto3" json:"shippingAddress,omitempty"`
	// the type of shipping like POST
	ShippingType string `protobuf:"bytes,8,opt,name=shippingType,proto3" json:"shippingType,omitempty"`
	// the type of payment
	PaymentType string `protobuf:"bytes,9,opt,name=paymentType,proto3" json:"paymentType,omitempty"`
	// the reference number of the psp
	PaymentReference string `protobuf:"bytes,10,opt,name=paymentReference,proto3" json:"paymentReference,omitempty"`
	// the ordernumber used in the system where order was created
	ExternalOrderNr string `protobuf:"bytes,11,opt,name=externalOrderNr,proto3" json:"externalOrderNr,omitempty"`
	// the status of the order
	OrderStatus int64 `protobuf:"varint,12,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`
	// the invoice number, in case the invoice is already created
	InvoiceNr int64 `protobuf:"varint,13,opt,name=invoiceNr,proto3" json:"invoiceNr,omitempty"`
	// the date in format YYYYMMDD
	InvoiceDate int64 `protobuf:"varint,14,opt,name=invoiceDate,proto3" json:"invoiceDate,omitempty"`
	// the ordervalue multiplied by 10000
	OrderValueGross int64 `protobuf:"varint,15,opt,name=orderValueGross,proto3" json:"orderValueGross,omitempty"`
	// the date in format YYYYMMDD
	ShippingDate int64 `protobuf:"varint,16,opt,name=shippingDate,proto3" json:"shippingDate,omitempty"`
	// the time in format HHMMSS
	ShippingTime int64 `protobuf:"varint,17,opt,name=shippingTime,proto3" json:"shippingTime,omitempty"`
	// the shippingcosts (amount mulitplied with 10000), must be included in ordervalue
	ShippingCosts int64 `protobuf:"varint,18,opt,name=shippingCosts,proto3" json:"shippingCosts,omitempty"`
	// the orderdate in format YYYYMMDD
	OrderDate int64 `protobuf:"varint,19,opt,name=orderDate,proto3" json:"orderDate,omitempty"`
	//the time the order has been placed in HHMMSS
	OrderTime int64 `protobuf:"varint,20,opt,name=orderTime,proto3" json:"orderTime,omitempty"`
	// the currency, for example EUR
	Currency string `protobuf:"bytes,21,opt,name=currency,proto3" json:"currency,omitempty"`
	// the date of billing the order, YYYYMMDD format
	BillingDate int64 `protobuf:"varint,22,opt,name=billingDate,proto3" json:"billingDate,omitempty"`
	// the creditnumber in case the ordertype is Credit
	CreditNr int64 `protobuf:"varint,23,opt,name=creditNr,proto3" json:"creditNr,omitempty"`
	// the amount of the voucher used in this order (amount mulitplied with 10000)
	VoucherAmount int64 `protobuf:"varint,24,opt,name=voucherAmount,proto3" json:"voucherAmount,omitempty"`
	// List Ordersposition
	Orderposition []*Ordersposition `protobuf:"bytes,25,rep,name=orderposition,proto3" json:"orderposition,omitempty"`
	// order origin
	Channel string `protobuf:"bytes,26,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{16}
}

func (x *OrderResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OrderResponse) GetAktiv() int64 {
	if x != nil {
		return x.Aktiv
	}
	return 0
}

func (x *OrderResponse) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderResponse) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderResponse) GetOrderNr() int64 {
	if x != nil {
		return x.OrderNr
	}
	return 0
}

func (x *OrderResponse) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *OrderResponse) GetShippingAddress() *Address {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *OrderResponse) GetShippingType() string {
	if x != nil {
		return x.ShippingType
	}
	return ""
}

func (x *OrderResponse) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *OrderResponse) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *OrderResponse) GetExternalOrderNr() string {
	if x != nil {
		return x.ExternalOrderNr
	}
	return ""
}

func (x *OrderResponse) GetOrderStatus() int64 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *OrderResponse) GetInvoiceNr() int64 {
	if x != nil {
		return x.InvoiceNr
	}
	return 0
}

func (x *OrderResponse) GetInvoiceDate() int64 {
	if x != nil {
		return x.InvoiceDate
	}
	return 0
}

func (x *OrderResponse) GetOrderValueGross() int64 {
	if x != nil {
		return x.OrderValueGross
	}
	return 0
}

func (x *OrderResponse) GetShippingDate() int64 {
	if x != nil {
		return x.ShippingDate
	}
	return 0
}

func (x *OrderResponse) GetShippingTime() int64 {
	if x != nil {
		return x.ShippingTime
	}
	return 0
}

func (x *OrderResponse) GetShippingCosts() int64 {
	if x != nil {
		return x.ShippingCosts
	}
	return 0
}

func (x *OrderResponse) GetOrderDate() int64 {
	if x != nil {
		return x.OrderDate
	}
	return 0
}

func (x *OrderResponse) GetOrderTime() int64 {
	if x != nil {
		return x.OrderTime
	}
	return 0
}

func (x *OrderResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderResponse) GetBillingDate() int64 {
	if x != nil {
		return x.BillingDate
	}
	return 0
}

func (x *OrderResponse) GetCreditNr() int64 {
	if x != nil {
		return x.CreditNr
	}
	return 0
}

func (x *OrderResponse) GetVoucherAmount() int64 {
	if x != nil {
		return x.VoucherAmount
	}
	return 0
}

func (x *OrderResponse) GetOrderposition() []*Ordersposition {
	if x != nil {
		return x.Orderposition
	}
	return nil
}

func (x *OrderResponse) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// Orderposition
type Ordersposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the uuid of this position
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// active flag (0=deleted, 1=active)
	Aktiv int64 `protobuf:"varint,2,opt,name=aktiv,proto3" json:"aktiv,omitempty"`
	// the item object used in this position
	Item *Item `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	// the name of the item used in the shop
	Itemdescription string `protobuf:"bytes,4,opt,name=itemdescription,proto3" json:"itemdescription,omitempty"`
	// the quantity the customer bought
	Orderquantity float32 `protobuf:"fixed32,5,opt,name=orderquantity,proto3" json:"orderquantity,omitempty"`
	// the quantity which has been delivered
	Deliveryquantity float32 `protobuf:"fixed32,6,opt,name=deliveryquantity,proto3" json:"deliveryquantity,omitempty"`
	// the quantity which has been canceled
	Cancelquantity float32 `protobuf:"fixed32,7,opt,name=cancelquantity,proto3" json:"cancelquantity,omitempty"`
	// the purchaseprice of this item when the order has been done (amount mulitplied with 10000)
	Purchaseprice float32 `protobuf:"fixed32,8,opt,name=purchaseprice,proto3" json:"purchaseprice,omitempty"`
	// the price of one piece of item (amount mulitplied with 10000)
	Sellingprice float32 `protobuf:"fixed32,9,opt,name=sellingprice,proto3" json:"sellingprice,omitempty"`
	// the price of the whole orderposition (amount mulitplied with 10000)
	Positionvalue float32 `protobuf:"fixed32,10,opt,name=positionvalue,proto3" json:"positionvalue,omitempty"`
	// in case there is a voucher used in this position the voucheramount (already calculated in positionvalue)
	Voucherprice float32 `protobuf:"fixed32,11,opt,name=voucherprice,proto3" json:"voucherprice,omitempty"`
	// the trackingnumber for track and trace
	Trackingnr string `protobuf:"bytes,12,opt,name=trackingnr,proto3" json:"trackingnr,omitempty"`
	// the taxrate in percentage
	Taxrate float32 `protobuf:"fixed32,13,opt,name=taxrate,proto3" json:"taxrate,omitempty"`
	// the used vouchercode for this position
	Vouchercode string `protobuf:"bytes,14,opt,name=vouchercode,proto3" json:"vouchercode,omitempty"`
	// item number used in the client system
	Extitemnumber string `protobuf:"bytes,15,opt,name=extitemnumber,proto3" json:"extitemnumber,omitempty"`
}

func (x *Ordersposition) Reset() {
	*x = Ordersposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ordersposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ordersposition) ProtoMessage() {}

func (x *Ordersposition) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ordersposition.ProtoReflect.Descriptor instead.
func (*Ordersposition) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{17}
}

func (x *Ordersposition) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Ordersposition) GetAktiv() int64 {
	if x != nil {
		return x.Aktiv
	}
	return 0
}

func (x *Ordersposition) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *Ordersposition) GetItemdescription() string {
	if x != nil {
		return x.Itemdescription
	}
	return ""
}

func (x *Ordersposition) GetOrderquantity() float32 {
	if x != nil {
		return x.Orderquantity
	}
	return 0
}

func (x *Ordersposition) GetDeliveryquantity() float32 {
	if x != nil {
		return x.Deliveryquantity
	}
	return 0
}

func (x *Ordersposition) GetCancelquantity() float32 {
	if x != nil {
		return x.Cancelquantity
	}
	return 0
}

func (x *Ordersposition) GetPurchaseprice() float32 {
	if x != nil {
		return x.Purchaseprice
	}
	return 0
}

func (x *Ordersposition) GetSellingprice() float32 {
	if x != nil {
		return x.Sellingprice
	}
	return 0
}

func (x *Ordersposition) GetPositionvalue() float32 {
	if x != nil {
		return x.Positionvalue
	}
	return 0
}

func (x *Ordersposition) GetVoucherprice() float32 {
	if x != nil {
		return x.Voucherprice
	}
	return 0
}

func (x *Ordersposition) GetTrackingnr() string {
	if x != nil {
		return x.Trackingnr
	}
	return ""
}

func (x *Ordersposition) GetTaxrate() float32 {
	if x != nil {
		return x.Taxrate
	}
	return 0
}

func (x *Ordersposition) GetVouchercode() string {
	if x != nil {
		return x.Vouchercode
	}
	return ""
}

func (x *Ordersposition) GetExtitemnumber() string {
	if x != nil {
		return x.Extitemnumber
	}
	return ""
}

//  Item
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the uuid of this item
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the itemnumber of this item
	Itemnumber string `protobuf:"bytes,2,opt,name=itemnumber,proto3" json:"itemnumber,omitempty"`
	// the name of this item used in item masterdata
	Designation string `protobuf:"bytes,3,opt,name=designation,proto3" json:"designation,omitempty"`
	// the link to the image
	Imagepath string `protobuf:"bytes,4,opt,name=imagepath,proto3" json:"imagepath,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{18}
}

func (x *Item) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Item) GetItemnumber() string {
	if x != nil {
		return x.Itemnumber
	}
	return ""
}

func (x *Item) GetDesignation() string {
	if x != nil {
		return x.Designation
	}
	return ""
}

func (x *Item) GetImagepath() string {
	if x != nil {
		return x.Imagepath
	}
	return ""
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the db uuid of the customer
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the title of the customer
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// the given firstname of the customer
	FirstName string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// the surname of the customer
	LastName string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// the email of the customer
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// the phonenumer
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	// the gender (Male=M, Female=F, C=Company)
	Gender string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	// date of birth in format YYYYMMDD
	BirthDate string `protobuf:"bytes,8,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	// company name
	Company string `protobuf:"bytes,9,opt,name=company,proto3" json:"company,omitempty"`
	// the id of the customer in the client system
	Externalcustomerid string `protobuf:"bytes,10,opt,name=externalcustomerid,proto3" json:"externalcustomerid,omitempty"`
	// the UID-number of the customer in the client system
	Uid string `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`
	// the list of addresses used by this customer
	Addresses []*Address `protobuf:"bytes,12,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// the id of the customer
	Customerid int64 `protobuf:"varint,13,opt,name=customerid,proto3" json:"customerid,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{19}
}

func (x *Customer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Customer) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Customer) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Customer) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Customer) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Customer) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *Customer) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Customer) GetExternalcustomerid() string {
	if x != nil {
		return x.Externalcustomerid
	}
	return ""
}

func (x *Customer) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Customer) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Customer) GetCustomerid() int64 {
	if x != nil {
		return x.Customerid
	}
	return 0
}

//  the addressobject represents one address
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the db uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the given firstname of the customer
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// the surname of the customer
	LastName string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// the type of the address (B=Billing Address, S=Shipping Address)
	AddressType string `protobuf:"bytes,4,opt,name=addressType,proto3" json:"addressType,omitempty"`
	// the street of the address
	Street string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
	// the housenr of the address
	HouseNr string `protobuf:"bytes,6,opt,name=houseNr,proto3" json:"houseNr,omitempty"`
	// the city of the address
	City string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	// the zipcode of the address
	Zip string `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	// the country in ISO3 Format (DEU=Germany)
	Country string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	// for attention for customer
	ForAttention string `protobuf:"bytes,10,opt,name=for_attention,json=forAttention,proto3" json:"for_attention,omitempty"`
	// add on for city
	CityAddon string `protobuf:"bytes,11,opt,name=city_addon,json=cityAddon,proto3" json:"city_addon,omitempty"`
	// add on for street
	StreetAddon string `protobuf:"bytes,12,opt,name=street_addon,json=streetAddon,proto3" json:"street_addon,omitempty"`
	//company name
	Company string `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{20}
}

func (x *Address) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Address) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Address) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Address) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetHouseNr() string {
	if x != nil {
		return x.HouseNr
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetForAttention() string {
	if x != nil {
		return x.ForAttention
	}
	return ""
}

func (x *Address) GetCityAddon() string {
	if x != nil {
		return x.CityAddon
	}
	return ""
}

func (x *Address) GetStreetAddon() string {
	if x != nil {
		return x.StreetAddon
	}
	return ""
}

func (x *Address) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type FileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// full path to get the file from
	Filepath string `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{21}
}

func (x *FileRequest) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

type FileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// file byte stream
	File []byte `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{22}
}

func (x *FileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FileResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *FileResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *FileResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//full file path
	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	//type of the file
	Type Document_DocType `protobuf:"varint,2,opt,name=type,proto3,enum=Document_DocType" json:"type,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{23}
}

func (x *Document) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Document) GetType() Document_DocType {
	if x != nil {
		return x.Type
	}
	return Document_UNKNOWN
}

// list of documents related to an order
type DocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates of the reuquested operation was successfull
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error message gives additional information about the error
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// HTTP style error type
	ErrorType string `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	// order identification
	Orderuuid string `protobuf:"bytes,4,opt,name=orderuuid,proto3" json:"orderuuid,omitempty"`
	//list of related documents
	Documents []*Document `protobuf:"bytes,5,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *DocumentResponse) Reset() {
	*x = DocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordersconnector_plain_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentResponse) ProtoMessage() {}

func (x *DocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ordersconnector_plain_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentResponse.ProtoReflect.Descriptor instead.
func (*DocumentResponse) Descriptor() ([]byte, []int) {
	return file_ordersconnector_plain_proto_rawDescGZIP(), []int{24}
}

func (x *DocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DocumentResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DocumentResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *DocumentResponse) GetOrderuuid() string {
	if x != nil {
		return x.Orderuuid
	}
	return ""
}

func (x *DocumentResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

var File_ordersconnector_plain_proto protoreflect.FileDescriptor

var file_ordersconnector_plain_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a,
	0x1a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x69, 0x0a, 0x1c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x1e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x67, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x0d,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6e, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x6e, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x6e, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0x2a, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x10,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0f,
	0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x64, 0x61,
	0x74, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x64, 0x61, 0x74,
	0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x7a, 0x65, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6c, 0x7a, 0x65, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x22, 0x47, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x66, 0x0a, 0x0a, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x22, 0x26, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb4, 0x06, 0x0a, 0x0c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x6e, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x6e, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x74, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x69, 0x6e,
	0x63, 0x61, 0x72, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x66,
	0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x65, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x22, 0xa1, 0x07, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6b,
	0x74, 0x69, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6b, 0x74, 0x69, 0x76,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x72, 0x12,
	0x30, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x32, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4e,
	0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4e,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x8f, 0x04, 0x0a, 0x0e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6b, 0x74, 0x69, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x6b, 0x74, 0x69, 0x76, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x76, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x6e, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x6e, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x74, 0x61, 0x78, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74,
	0x69, 0x74, 0x65, 0x6d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x70, 0x61, 0x74, 0x68, 0x22, 0xf4, 0x02, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x22, 0xec, 0x02,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x29, 0x0a, 0x0b,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x22, 0x7e, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x53, 0x4c, 0x49, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x4e, 0x4f, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x49, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x53, 0x4c, 0x49, 0x50, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x52, 0x49,
	0x4e, 0x54, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x22,
	0xb5, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xe2, 0x04, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x08, 0x67,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x07, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x11, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x11, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x4f, 0x66, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x19, 0x67, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x62, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x07, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a,
	0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x46, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x42, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x50, 0x01, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ordersconnector_plain_proto_rawDescOnce sync.Once
	file_ordersconnector_plain_proto_rawDescData = file_ordersconnector_plain_proto_rawDesc
)

func file_ordersconnector_plain_proto_rawDescGZIP() []byte {
	file_ordersconnector_plain_proto_rawDescOnce.Do(func() {
		file_ordersconnector_plain_proto_rawDescData = protoimpl.X.CompressGZIP(file_ordersconnector_plain_proto_rawDescData)
	})
	return file_ordersconnector_plain_proto_rawDescData
}

var file_ordersconnector_plain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ordersconnector_plain_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_ordersconnector_plain_proto_goTypes = []interface{}{
	(Document_DocType)(0),                  // 0: Document.DocType
	(*OrderpositionSearchRequest)(nil),     // 1: OrderpositionSearchRequest
	(*OrderpositionReturnsResponse)(nil),   // 2: OrderpositionReturnsResponse
	(*OrderpositionOneReturnResponse)(nil), // 3: OrderpositionOneReturnResponse
	(*StatusUpdateRequest)(nil),            // 4: StatusUpdateRequest
	(*Response)(nil),                       // 5: Response
	(*CreateResponse)(nil),                 // 6: CreateResponse
	(*InvoiceNumber)(nil),                  // 7: InvoiceNumber
	(*Search)(nil),                         // 8: Search
	(*OrderLogResponse)(nil),               // 9: OrderLogResponse
	(*Logresponse)(nil),                    // 10: logresponse
	(*StatusCode)(nil),                     // 11: StatusCode
	(*OrderId)(nil),                        // 12: OrderId
	(*CustomerId)(nil),                     // 13: CustomerId
	(*Username)(nil),                       // 14: Username
	(*OrderRequest)(nil),                   // 15: OrderRequest
	(*CustomerCreateResponse)(nil),         // 16: CustomerCreateResponse
	(*OrderResponse)(nil),                  // 17: OrderResponse
	(*Ordersposition)(nil),                 // 18: Ordersposition
	(*Item)(nil),                           // 19: Item
	(*Customer)(nil),                       // 20: Customer
	(*Address)(nil),                        // 21: Address
	(*FileRequest)(nil),                    // 22: FileRequest
	(*FileResponse)(nil),                   // 23: FileResponse
	(*Document)(nil),                       // 24: Document
	(*DocumentResponse)(nil),               // 25: DocumentResponse
}
var file_ordersconnector_plain_proto_depIdxs = []int32{
	3,  // 0: OrderpositionReturnsResponse.positionreturns:type_name -> OrderpositionOneReturnResponse
	17, // 1: Response.orders:type_name -> OrderResponse
	10, // 2: OrderLogResponse.logresponseline:type_name -> logresponse
	20, // 3: OrderRequest.customer:type_name -> Customer
	21, // 4: OrderRequest.billingAddress:type_name -> Address
	21, // 5: OrderRequest.shippingAddress:type_name -> Address
	18, // 6: OrderRequest.orderposition:type_name -> Ordersposition
	20, // 7: CustomerCreateResponse.customer:type_name -> Customer
	20, // 8: OrderResponse.customer:type_name -> Customer
	21, // 9: OrderResponse.billingAddress:type_name -> Address
	21, // 10: OrderResponse.shippingAddress:type_name -> Address
	18, // 11: OrderResponse.orderposition:type_name -> Ordersposition
	19, // 12: Ordersposition.item:type_name -> Item
	21, // 13: Customer.addresses:type_name -> Address
	0,  // 14: Document.type:type_name -> Document.DocType
	24, // 15: DocumentResponse.documents:type_name -> Document
	12, // 16: OrdersConnector.getOrder:input_type -> OrderId
	15, // 17: OrdersConnector.createOrder:input_type -> OrderRequest
	11, // 18: OrdersConnector.getOrdersByStatus:input_type -> StatusCode
	13, // 19: OrdersConnector.getOrdersForCustomer:input_type -> CustomerId
	7,  // 20: OrdersConnector.getOrdersForInvoice:input_type -> InvoiceNumber
	7,  // 21: OrdersConnector.getDocumentsPerOrder:input_type -> InvoiceNumber
	22, // 22: OrdersConnector.getSpecificDocumentOfOrder:input_type -> FileRequest
	8,  // 23: OrdersConnector.getOrderLog:input_type -> Search
	4,  // 24: OrdersConnector.updateOrderStatus:input_type -> StatusUpdateRequest
	1,  // 25: OrdersConnector.getReturnsOfPosition:input_type -> OrderpositionSearchRequest
	8,  // 26: OrdersConnector.getOrdersbyFullTextSearch:input_type -> Search
	5,  // 27: OrdersConnector.getOrder:output_type -> Response
	6,  // 28: OrdersConnector.createOrder:output_type -> CreateResponse
	5,  // 29: OrdersConnector.getOrdersByStatus:output_type -> Response
	5,  // 30: OrdersConnector.getOrdersForCustomer:output_type -> Response
	5,  // 31: OrdersConnector.getOrdersForInvoice:output_type -> Response
	25, // 32: OrdersConnector.getDocumentsPerOrder:output_type -> DocumentResponse
	23, // 33: OrdersConnector.getSpecificDocumentOfOrder:output_type -> FileResponse
	9,  // 34: OrdersConnector.getOrderLog:output_type -> OrderLogResponse
	5,  // 35: OrdersConnector.updateOrderStatus:output_type -> Response
	2,  // 36: OrdersConnector.getReturnsOfPosition:output_type -> OrderpositionReturnsResponse
	5,  // 37: OrdersConnector.getOrdersbyFullTextSearch:output_type -> Response
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_ordersconnector_plain_proto_init() }
func file_ordersconnector_plain_proto_init() {
	if File_ordersconnector_plain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ordersconnector_plain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderpositionSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderpositionReturnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderpositionOneReturnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logresponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Username); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ordersposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordersconnector_plain_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ordersconnector_plain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ordersconnector_plain_proto_goTypes,
		DependencyIndexes: file_ordersconnector_plain_proto_depIdxs,
		EnumInfos:         file_ordersconnector_plain_proto_enumTypes,
		MessageInfos:      file_ordersconnector_plain_proto_msgTypes,
	}.Build()
	File_ordersconnector_plain_proto = out.File
	file_ordersconnector_plain_proto_rawDesc = nil
	file_ordersconnector_plain_proto_goTypes = nil
	file_ordersconnector_plain_proto_depIdxs = nil
}
